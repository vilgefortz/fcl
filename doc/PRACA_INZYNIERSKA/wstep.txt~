Pomys³ na logikê rozmyt± zrodzi³ siê w 1960 r na Uniwersytecie Kalifornijskim w Berkley. Zosta³a ona zaproponowana przez Dr Lotfi Zadecha, który pracowa³ nad problemem rozumienia naturalnego jêzyka przez komputer. Naturalny jêzyk, podobnie jak praktycznie wszystko w otaczaj±cym nas ¶wiecie ciê¿ko jest przet³umaczyæ na komputerowe 0/1. Samo pytanie czy wszystko da siê wyt³umaczyæ binarnie jest czysto filozoficzne, choæ zazwyczaj dane które mamy do przetworzenia dostajemy ju¿ w tej postaci z innego, elektronicznego ¼ród³a. 

Logika rozmyta do pojêæ prawdy i fa³szu dodaje równie¿ ca³± gamê warto¶ci po¶rednich. Takie podej¶cie znane by³o ju¿ wcze¶niej w logice trójwaro¶ciowiej £ukasiewicza (L3) (TODO wikipedia https://pl.wikipedia.org/wiki/Logika_tr%C3%B3jwarto%C5%9Bciowa), podobne próby podejmowa³ równie¿ Clarence Lewis. Trzecim stanem w logice £ukasiewicza by³ stan nieznany (0.5). Lotfi ten pomys³ rozwin±³ na ca³± przestrzeñ warto¶ci <0,1>. 

W logice rozmytej warto¶ci 0 i 1 stanowi± ekstremalne przypadki prawdy (albo stanu wa¿no¶ci, faktu), mo¿e ona jednak przybieraæ dowolne warto¶ci ze zbioru <0,1> co daje mo¿liwo¶æ stwierdzenia, ¿e co¶ jest np. w 0.7 wysokie i w 0.3 ciep³e. Jest to bardzo bliskie naszemu naturalnemu procesowi my¶lowemu, gdzie nic nigdy nie jest do koñca czarne ani bia³e. Logika rozmyta nie wyklucza swoim istnieniem logiki binarnej, jest jedynie jej uogólnieniem. Prawa, które ni± rz±dz± daj± siê zaaplikowaæ do logiki Boole'a dlatego, ¿e w obydwu zachowane s± prawa Augusta De Morgana (TODO https://en.wikipedia.org/wiki/De_Morgan%27s_laws)


Fuzzy logic includes 0 and 1 as extreme cases of truth (or "the state of matters" or "fact") but also includes the various states of truth in between so that, for example, the result of a comparison between two things could be not "tall" or "short" but ".38 of tallness."

Fuzzy logic seems closer to the way our brains work. We aggregate data and form a number of partial truths which we aggregate further into higher truths which in turn, when certain thresholds are exceeded, cause certain further results such as motor reaction. A similar kind of process is used in artificial computer neural network and expert systems..

It may help to see fuzzy logic as the way reasoning really works and binary or Boolean logic is simply a special case of it.

Fuzzy logic starts with and builds on a set of user-supplied human language rules. The fuzzy systems convert these rules to their mathematical equivalents. This simplifies the job of the system designer and the computer, and results in much more accurate representations of the way systems behave in the real world.

Additional benefits of fuzzy logic include its simplicity and its flexibility. Fuzzy logic can handle problems with imprecise and incomplete data, and it can model nonlinear functions of arbitrary complexity. "If you don't have a good plant model, or if the system is changing, then fuzzy will produce a better solution than conventional control techniques," says Bob Varley, a Senior Systems Engineer at Harris Corp., an aerospace company in Palm Bay, Florida.

You can create a fuzzy system to match any set of input-output data. The Fuzzy Logic Toolbox makes this particularly easy by supplying adaptive techniques such as adaptive neuro-fuzzy inference systems (ANFIS) and fuzzy subtractive clustering.

Fuzzy logic models, called fuzzy inference systems, consist of a number of conditional "if-then" rules. For the designer who understands the system, these rules are easy to write, and as many rules as necessary can be supplied to describe the system adequately (although typically only a moderate number of rules are needed).

In fuzzy logic, unlike standard conditional logic, the truth of any statement is a matter of degree. (How cold is it? How high should we set the heat?) We are familiar with inference rules of the form p -> q (p implies q). With fuzzy logic, it's possible to say (.5* p ) -> (.5 * q). For example, for the rule if (weather is cold) then (heat is on), both variables, cold and on, map to ranges of values. Fuzzy inference systems rely on membership functions to explain to the computer how to calculate the correct value between 0 and 1. The degree to which any fuzzy statement is true is denoted by a value between 0 and 1.

Logika 

Not only do the rule-based approach and flexible membership function scheme make fuzzy systems straightforward to create, but they also simplify the design of systems and ensure that you can easily update and maintain the system over time. Logika rozmyta powsta³a z my¶l± na¶ladowania "ludzkiego" sposobu wnioskowania. Zbiory rozmyte stanowi±ce reprezentacjê informacji w logice rozmytej zosta³y zaproponowane przez Zadeha w 1965 r. Maj± one za zadanie reprezentacjê niepewno¶ci w ujêciu matematycznym. Systemy rozmyte maj± zastosowanie tam, gdzie brakuje modelu matematycznego lub istnieje potrzeba podejmowania decyzji w otoczeniu o którym nie mamy wszystkich potrzebnych informacji. Za pomoc± regu³ lingwistycznych przybli¿amy reprezentacjê problemu do naszego "ludzkiego" sposobu rozumowania, co jest du¿o prostsze ni¿ znalezienie zale¿no¶ci matematycznych problemu. 
Teoria zbiorów rozmytych cieszy siê do¶æ du¿± popularno¶ci± w dziedzinach zwi±zanych ze sterowaniem oraz przetwarzaniem jêzyka. Produkowane s± mikroprocesory których rozkazy projektowane s± pod przetwarzanie rozmyte. Powsta³o do tego czasu kilka sposobów reprezentacji wiedzy systemu rozmytego. W niniejszej pracy skupi³em siê nad przedstawieniem jednego z nich. Fuzzy Control Language (FCL) jest jêzykiem który zosta³ ustandaryzowany przez Miêdzynarodow± Komisjê Elektrotechniczn± (IEC) w dokumencie IEC 61131-7. Jêzyk ten nie zawiera ¿adnych funkcjonalno¶ci nie zwi±zanych z logik± rozmyt±, co sprawia, ¿e nie da siê w nim napisaæ najprostszego programu który da jakiekolwiek rezultaty (np "Hello World"). Mo¿e on byæ jednak czê¶ci± wiêkszego programu. 
Biblioteka napisana przeze mnie w jêzyku Java ma na celu interpretacjê pliku skryptowego FCL i jego reprezentacjê w postaci struktury powi±zanych obiektów. Mozna j± wykorzystaæ do sterowania inn± aplikacj±, jak równie¿ zaprezentowaæ sposób dzia³ania skryptu w celu analizy - mo¿liwy jest równie¿ podgl±d ka¿dego etapu procesu wnioskowania rozmytego. Na koniec pracy przedstawiê równie¿ prosty system sterowany skryptem FCL.

